service: lambda-cron-sample-test-2

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: <+env.variables.region>
  timeout: 6
  memorySize: 128
  stage: dev
  environment:
    AWS_PARAMETER_SPACE: <+env.variables.space>   
    AWS_LAMBDA_REGION: <+env.variables.region>
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: 
            - "ssm:Describe*"
            - "ssm:Get*"
            - "ssm:List*"
          Resource: 
            - "*"
            
functions:
  rateHandler:
    name: ${self:custom.functionName}
    handler: handler.run
    description: Sample Cron Example

resources:
  Resources:
    CronJobTrigger:
      Type: AWS::Events::Rule
      Properties:        
        Name: lambda-cron-sample-test-scheduler
        Description: Invoke Lambda Function Every 5 Minute
        ScheduleExpression: cron(*/1 * * * ? *)
        State: ENABLED
        Targets:
          - Id: ${self:custom.functionName}
            Arn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:custom.functionName}
    LambdaInvokePermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: ${self:custom.functionName}
        Action: lambda:InvokeFunction
        Principal: events.amazonaws.com
        SourceArn:
          Fn::GetAtt: [CronJobTrigger, Arn]
      DependsOn:
        - RateHandlerLambdaFunction  

custom:
  functionName: rateHandlerv2

package:
  artifact: <+artifact.path>          
plugins:
  - serverless-deployment-bucket@latest  
